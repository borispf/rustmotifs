#![allow(non_camel_case_types)]
/* automatically generated by rust-bindgen */

pub type setword = ::libc::c_ulong;
pub type nauty_counter = ::libc::c_ulong;
pub type shortish = ::libc::c_int;
pub type permutation = shortish;
pub type nvector = ::libc::c_int;
pub type np2vector = ::libc::c_int;
pub type boolean = ::libc::c_int;
pub type set = setword;
pub type graph = setword;
#[repr(C)]
#[derive(Copy, Debug)]
pub struct Struct_Unnamed1 {
    pub grpsize1: ::libc::c_double,
    pub grpsize2: ::libc::c_int,
    pub numorbits: ::libc::c_int,
    pub numgenerators: ::libc::c_int,
    pub errstatus: ::libc::c_int,
    pub numnodes: ::libc::c_ulong,
    pub numbadleaves: ::libc::c_ulong,
    pub maxlevel: ::libc::c_int,
    pub tctotal: ::libc::c_ulong,
    pub canupdates: ::libc::c_ulong,
    pub invapplics: ::libc::c_ulong,
    pub invsuccesses: ::libc::c_ulong,
    pub invarsuclevel: ::libc::c_int,
}
impl ::std::clone::Clone for Struct_Unnamed1 {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct_Unnamed1 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type statsblk = Struct_Unnamed1;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_Unnamed2 {
    pub isautom: ::std::option::Option<unsafe extern "C" fn(arg1: *mut graph,
                                                            arg2:
                                                                *mut ::libc::c_int,
                                                            arg3: boolean,
                                                            arg4:
                                                                ::libc::c_int,
                                                            arg5:
                                                                ::libc::c_int)
                                           -> boolean>,
    pub testcanlab: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut graph,
                                                               arg2:
                                                                   *mut graph,
                                                               arg3:
                                                                   *mut ::libc::c_int,
                                                               arg4:
                                                                   *mut ::libc::c_int,
                                                               arg5:
                                                                   ::libc::c_int,
                                                               arg6:
                                                                   ::libc::c_int)
                                              -> ::libc::c_int>,
    pub updatecan: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut graph,
                                                              arg2:
                                                                  *mut graph,
                                                              arg3:
                                                                  *mut ::libc::c_int,
                                                              arg4:
                                                                  ::libc::c_int,
                                                              arg5:
                                                                  ::libc::c_int,
                                                              arg6:
                                                                  ::libc::c_int)
                                             -> ()>,
    pub refine: ::std::option::Option<unsafe extern "C" fn(arg1: *mut graph,
                                                           arg2:
                                                               *mut ::libc::c_int,
                                                           arg3:
                                                               *mut ::libc::c_int,
                                                           arg4:
                                                               ::libc::c_int,
                                                           arg5:
                                                               *mut ::libc::c_int,
                                                           arg6:
                                                               *mut ::libc::c_int,
                                                           arg7: *mut set,
                                                           arg8:
                                                               *mut ::libc::c_int,
                                                           arg9:
                                                               ::libc::c_int,
                                                           arg10:
                                                               ::libc::c_int)
                                          -> ()>,
    pub refine1: ::std::option::Option<unsafe extern "C" fn(arg1: *mut graph,
                                                            arg2:
                                                                *mut ::libc::c_int,
                                                            arg3:
                                                                *mut ::libc::c_int,
                                                            arg4:
                                                                ::libc::c_int,
                                                            arg5:
                                                                *mut ::libc::c_int,
                                                            arg6:
                                                                *mut ::libc::c_int,
                                                            arg7: *mut set,
                                                            arg8:
                                                                *mut ::libc::c_int,
                                                            arg9:
                                                                ::libc::c_int,
                                                            arg10:
                                                                ::libc::c_int)
                                           -> ()>,
    pub cheapautom: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut ::libc::c_int,
                                                               arg2:
                                                                   ::libc::c_int,
                                                               arg3: boolean,
                                                               arg4:
                                                                   ::libc::c_int)
                                              -> boolean>,
    pub targetcell: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                   *mut graph,
                                                               arg2:
                                                                   *mut ::libc::c_int,
                                                               arg3:
                                                                   *mut ::libc::c_int,
                                                               arg4:
                                                                   ::libc::c_int,
                                                               arg5:
                                                                   ::libc::c_int,
                                                               arg6: boolean,
                                                               arg7:
                                                                   ::libc::c_int,
                                                               arg8:
                                                                   ::libc::c_int,
                                                               arg9:
                                                                   ::libc::c_int)
                                              -> ::libc::c_int>,
    pub freedyn: ::std::option::Option<extern "C" fn() -> ()>,
    pub check: ::std::option::Option<extern "C" fn(arg1: ::libc::c_int,
                                                   arg2: ::libc::c_int,
                                                   arg3: ::libc::c_int,
                                                   arg4: ::libc::c_int)
                                         -> ()>,
    pub init: ::std::option::Option<unsafe extern "C" fn(arg1: *mut graph,
                                                         arg2:
                                                             *mut *mut graph,
                                                         arg3: *mut graph,
                                                         arg4:
                                                             *mut *mut graph,
                                                         arg5:
                                                             *mut ::libc::c_int,
                                                         arg6:
                                                             *mut ::libc::c_int,
                                                         arg7: *mut set,
                                                         arg8:
                                                             *mut Struct_optionstruct,
                                                         arg9:
                                                             *mut ::libc::c_int,
                                                         arg10: ::libc::c_int,
                                                         arg11: ::libc::c_int)
                                        -> ()>,
    pub cleanup: ::std::option::Option<unsafe extern "C" fn(arg1: *mut graph,
                                                            arg2:
                                                                *mut *mut graph,
                                                            arg3: *mut graph,
                                                            arg4:
                                                                *mut *mut graph,
                                                            arg5:
                                                                *mut ::libc::c_int,
                                                            arg6:
                                                                *mut ::libc::c_int,
                                                            arg7:
                                                                *mut Struct_optionstruct,
                                                            arg8:
                                                                *mut statsblk,
                                                            arg9:
                                                                ::libc::c_int,
                                                            arg10:
                                                                ::libc::c_int)
                                           -> ()>,
}
impl ::std::clone::Clone for Struct_Unnamed2 {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct_Unnamed2 {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type dispatchvec = Struct_Unnamed2;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_optionstruct {
    pub getcanon: ::libc::c_int,
    pub digraph: boolean,
    pub writeautoms: boolean,
    pub writemarkers: boolean,
    pub defaultptn: boolean,
    pub cartesian: boolean,
    pub linelength: ::libc::c_int,
    pub outfile: *mut ::libc::FILE,
    pub userrefproc: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut graph,
                                                                arg2:
                                                                    *mut ::libc::c_int,
                                                                arg3:
                                                                    *mut ::libc::c_int,
                                                                arg4:
                                                                    ::libc::c_int,
                                                                arg5:
                                                                    *mut ::libc::c_int,
                                                                arg6:
                                                                    *mut ::libc::c_int,
                                                                arg7:
                                                                    *mut set,
                                                                arg8:
                                                                    *mut ::libc::c_int,
                                                                arg9:
                                                                    ::libc::c_int,
                                                                arg10:
                                                                    ::libc::c_int)
                                               -> ()>,
    pub userautomproc: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      ::libc::c_int,
                                                                  arg2:
                                                                      *mut ::libc::c_int,
                                                                  arg3:
                                                                      *mut ::libc::c_int,
                                                                  arg4:
                                                                      ::libc::c_int,
                                                                  arg5:
                                                                      ::libc::c_int,
                                                                  arg6:
                                                                      ::libc::c_int)
                                                 -> ()>,
    pub userlevelproc: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                      *mut ::libc::c_int,
                                                                  arg2:
                                                                      *mut ::libc::c_int,
                                                                  arg3:
                                                                      ::libc::c_int,
                                                                  arg4:
                                                                      *mut ::libc::c_int,
                                                                  arg5:
                                                                      *mut statsblk,
                                                                  arg6:
                                                                      ::libc::c_int,
                                                                  arg7:
                                                                      ::libc::c_int,
                                                                  arg8:
                                                                      ::libc::c_int,
                                                                  arg9:
                                                                      ::libc::c_int,
                                                                  arg10:
                                                                      ::libc::c_int,
                                                                  arg11:
                                                                      ::libc::c_int)
                                                 -> ()>,
    pub usernodeproc: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                     *mut graph,
                                                                 arg2:
                                                                     *mut ::libc::c_int,
                                                                 arg3:
                                                                     *mut ::libc::c_int,
                                                                 arg4:
                                                                     ::libc::c_int,
                                                                 arg5:
                                                                     ::libc::c_int,
                                                                 arg6:
                                                                     ::libc::c_int,
                                                                 arg7:
                                                                     ::libc::c_int,
                                                                 arg8:
                                                                     ::libc::c_int,
                                                                 arg9:
                                                                     ::libc::c_int)
                                                -> ()>,
    pub invarproc: ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                  *mut graph,
                                                              arg2:
                                                                  *mut ::libc::c_int,
                                                              arg3:
                                                                  *mut ::libc::c_int,
                                                              arg4:
                                                                  ::libc::c_int,
                                                              arg5:
                                                                  ::libc::c_int,
                                                              arg6:
                                                                  ::libc::c_int,
                                                              arg7:
                                                                  *mut ::libc::c_int,
                                                              arg8:
                                                                  ::libc::c_int,
                                                              arg9: boolean,
                                                              arg10:
                                                                  ::libc::c_int,
                                                              arg11:
                                                                  ::libc::c_int)
                                             -> ()>,
    pub tc_level: ::libc::c_int,
    pub mininvarlevel: ::libc::c_int,
    pub maxinvarlevel: ::libc::c_int,
    pub invararg: ::libc::c_int,
    pub dispatch: *mut dispatchvec,
    pub schreier: boolean,
    pub extra_options: *mut ::libc::c_void,
}
impl ::std::clone::Clone for Struct_optionstruct {
    fn clone(&self) -> Self {
        *self
    }
}
impl ::std::default::Default for Struct_optionstruct {
    fn default() -> Self {
        unsafe { ::std::mem::zeroed() }
    }
}
pub type optionblk = Struct_optionstruct;
extern {
    pub static mut labelorg: ::libc::c_int;
    pub static mut dispatch_graph: dispatchvec;
}
extern {
    pub fn alloc_error(arg1: *mut ::libc::c_char) -> ();
    pub fn breakout(arg1: *mut ::libc::c_int,
                arg2: *mut ::libc::c_int,
                arg3: ::libc::c_int,
                arg4: ::libc::c_int,
                arg5: ::libc::c_int,
                arg6: *mut set,
                arg7: ::libc::c_int)
                -> ();
    pub fn cheapautom(arg1: *mut ::libc::c_int,
                  arg2: ::libc::c_int,
                  arg3: boolean,
                  arg4: ::libc::c_int)
                  -> boolean;
    pub fn doref(arg1: *mut graph, arg2: *mut ::libc::c_int,
                 arg3: *mut ::libc::c_int, arg4: ::libc::c_int,
                 arg5: *mut ::libc::c_int, arg6: *mut ::libc::c_int,
                 arg7: *mut ::libc::c_int, arg8: *mut set,
                 arg9: *mut ::libc::c_int,
                 arg10:
                     ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut graph,
                                                                arg2:
                                                                    *mut ::libc::c_int,
                                                                arg3:
                                                                    *mut ::libc::c_int,
                                                                arg4:
                                                                    ::libc::c_int,
                                                                arg5:
                                                                    *mut ::libc::c_int,
                                                                arg6:
                                                                    *mut ::libc::c_int,
                                                                arg7:
                                                                    *mut set,
                                                                arg8:
                                                                    *mut ::libc::c_int,
                                                                arg9:
                                                                    ::libc::c_int,
                                                                arg10:
                                                                    ::libc::c_int)
                                               -> ()>,
                 arg11:
                     ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                    *mut graph,
                                                                arg2:
                                                                    *mut ::libc::c_int,
                                                                arg3:
                                                                    *mut ::libc::c_int,
                                                                arg4:
                                                                    ::libc::c_int,
                                                                arg5:
                                                                    ::libc::c_int,
                                                                arg6:
                                                                    ::libc::c_int,
                                                                arg7:
                                                                    *mut ::libc::c_int,
                                                                arg8:
                                                                    ::libc::c_int,
                                                                arg9: boolean,
                                                                arg10:
                                                                    ::libc::c_int,
                                                                arg11:
                                                                    ::libc::c_int)
                                               -> ()>, arg12: ::libc::c_int,
                 arg13: ::libc::c_int, arg14: ::libc::c_int, arg15: boolean,
                 arg16: ::libc::c_int, arg17: ::libc::c_int) -> ();
    pub fn extra_autom(arg1: *mut ::libc::c_int, arg2: ::libc::c_int) -> ();
    pub fn extra_level(arg1: ::libc::c_int,
                   arg2: *mut ::libc::c_int,
                   arg3: *mut ::libc::c_int,
                   arg4: ::libc::c_int,
                   arg5: ::libc::c_int,
                   arg6: ::libc::c_int,
                   arg7: ::libc::c_int,
                   arg8: ::libc::c_int,
                   arg9: ::libc::c_int)
                   -> ();
    pub fn isautom(arg1: *mut graph,
               arg2: *mut ::libc::c_int,
               arg3: boolean,
               arg4: ::libc::c_int,
               arg5: ::libc::c_int)
               -> boolean;
    pub fn itos(arg1: ::libc::c_int, arg2: *mut ::libc::c_char) -> ::libc::c_int;
    pub fn fmperm(arg1: *mut ::libc::c_int,
              arg2: *mut set,
              arg3: *mut set,
              arg4: ::libc::c_int,
              arg5: ::libc::c_int)
              -> ();
    pub fn fmptn(arg1: *mut ::libc::c_int,
             arg2: *mut ::libc::c_int,
             arg3: ::libc::c_int,
             arg4: *mut set,
             arg5: *mut set,
             arg6: ::libc::c_int,
             arg7: ::libc::c_int)
             -> ();
    pub fn longprune(arg1: *mut set,
                 arg2: *mut set,
                 arg3: *mut set,
                 arg4: *mut set,
                 arg5: ::libc::c_int)
                 -> ();
    pub fn nauty(arg1: *mut graph,
             arg2: *mut ::libc::c_int,
             arg3: *mut ::libc::c_int,
             arg4: *mut set,
             arg5: *mut ::libc::c_int,
             arg6: *mut optionblk,
             arg7: *mut statsblk,
             arg8: *mut set,
             arg9: ::libc::c_int,
             arg10: ::libc::c_int,
             arg11: ::libc::c_int,
             arg12: *mut graph)
             -> ();
    pub fn maketargetcell(arg1: *mut graph, arg2: *mut ::libc::c_int,
                          arg3: *mut ::libc::c_int, arg4: ::libc::c_int,
                          arg5: *mut set, arg6: *mut ::libc::c_int,
                          arg7: *mut ::libc::c_int, arg8: ::libc::c_int,
                          arg9: boolean, arg10: ::libc::c_int,
                          arg11:
                              ::std::option::Option<unsafe extern "C" fn(arg1:
                                                                             *mut graph,
                                                                         arg2:
                                                                             *mut ::libc::c_int,
                                                                         arg3:
                                                                             *mut ::libc::c_int,
                                                                         arg4:
                                                                             ::libc::c_int,
                                                                         arg5:
                                                                             ::libc::c_int,
                                                                         arg6:
                                                                             boolean,
                                                                         arg7:
                                                                             ::libc::c_int,
                                                                         arg8:
                                                                             ::libc::c_int,
                                                                         arg9:
                                                                             ::libc::c_int)
                                                        -> ::libc::c_int>,
                          arg12: ::libc::c_int, arg13: ::libc::c_int) -> ();
    pub fn nextelement(arg1: *mut set, arg2: ::libc::c_int, arg3: ::libc::c_int) -> ::libc::c_int;
    pub fn orbjoin(arg1: *mut ::libc::c_int,
               arg2: *mut ::libc::c_int,
               arg3: ::libc::c_int)
               -> ::libc::c_int;
    pub fn permset(arg1: *mut set,
               arg2: *mut set,
               arg3: ::libc::c_int,
               arg4: *mut ::libc::c_int)
               -> ();
    pub fn putstring(arg1: *mut ::libc::FILE, arg2: *mut ::libc::c_char) -> ();
    pub fn refine(arg1: *mut graph,
              arg2: *mut ::libc::c_int,
              arg3: *mut ::libc::c_int,
              arg4: ::libc::c_int,
              arg5: *mut ::libc::c_int,
              arg6: *mut ::libc::c_int,
              arg7: *mut set,
              arg8: *mut ::libc::c_int,
              arg9: ::libc::c_int,
              arg10: ::libc::c_int)
              -> ();
    pub fn refine1(arg1: *mut graph,
               arg2: *mut ::libc::c_int,
               arg3: *mut ::libc::c_int,
               arg4: ::libc::c_int,
               arg5: *mut ::libc::c_int,
               arg6: *mut ::libc::c_int,
               arg7: *mut set,
               arg8: *mut ::libc::c_int,
               arg9: ::libc::c_int,
               arg10: ::libc::c_int)
               -> ();
    pub fn shortprune(arg1: *mut set, arg2: *mut set, arg3: ::libc::c_int) -> ();
    pub fn targetcell(arg1: *mut graph,
                  arg2: *mut ::libc::c_int,
                  arg3: *mut ::libc::c_int,
                  arg4: ::libc::c_int,
                  arg5: ::libc::c_int,
                  arg6: boolean,
                  arg7: ::libc::c_int,
                  arg8: ::libc::c_int,
                  arg9: ::libc::c_int)
                  -> ::libc::c_int;
    pub fn testcanlab(arg1: *mut graph,
                  arg2: *mut graph,
                  arg3: *mut ::libc::c_int,
                  arg4: *mut ::libc::c_int,
                  arg5: ::libc::c_int,
                  arg6: ::libc::c_int)
                  -> ::libc::c_int;
    pub fn updatecan(arg1: *mut graph,
                 arg2: *mut graph,
                 arg3: *mut ::libc::c_int,
                 arg4: ::libc::c_int,
                 arg5: ::libc::c_int,
                 arg6: ::libc::c_int)
                 -> ();
    pub fn writeperm(arg1: *mut ::libc::FILE,
                 arg2: *mut ::libc::c_int,
                 arg3: boolean,
                 arg4: ::libc::c_int,
                 arg5: ::libc::c_int)
                 -> ();
    pub fn nauty_freedyn() -> ();
    pub fn nauty_check(arg1: ::libc::c_int,
                   arg2: ::libc::c_int,
                   arg3: ::libc::c_int,
                   arg4: ::libc::c_int)
                   -> ();
    pub fn naugraph_check(arg1: ::libc::c_int,
                      arg2: ::libc::c_int,
                      arg3: ::libc::c_int,
                      arg4: ::libc::c_int)
                      -> ();
    pub fn nautil_check(arg1: ::libc::c_int,
                    arg2: ::libc::c_int,
                    arg3: ::libc::c_int,
                    arg4: ::libc::c_int)
                    -> ();
    pub fn nautil_freedyn() -> ();
    pub fn naugraph_freedyn() -> ();
    pub fn densenauty(arg1: *mut graph,
                  arg2: *mut ::libc::c_int,
                  arg3: *mut ::libc::c_int,
                  arg4: *mut ::libc::c_int,
                  arg5: *mut optionblk,
                  arg6: *mut statsblk,
                  arg7: ::libc::c_int,
                  arg8: ::libc::c_int,
                  arg9: *mut graph)
                  -> ();
    pub fn writegroupsize(arg1: *mut ::libc::FILE, arg2: ::libc::c_double, arg3: ::libc::c_int) -> ();
}
